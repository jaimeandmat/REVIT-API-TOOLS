# -*- coding: utf-8 -*-
__title__ = "Export from RVT to NWC(Background)"
__doc__ = """Version = 1.0
Date    = 12.01.2024
_____________________________________________________________________
Description:
This button allow the user to export from revit to NWC in the Background:
-It allows the user to select a rvt file to open in the background.
-It allows the user to select a 3D view from the Revit model.
-The user can pick a folder where the NWC file will be saved.
-The user is prompted to select an XML file for Navisworks export settings. (It could be set by default in Python)
-The user can enter a custom name for the NWC file.
-The script then exports the selected view to an NWC file with the specified name and settings.

Notes:
1 - Check that you have Naviswork Export downloaded.
2 - You need to select Naviswork Export Configuration. It coul vary between projects.
Author: J.A.M. """

#â¬‡ IMPORTS

import clr
import System
import xml.etree.ElementTree as ET
from Autodesk.Revit.DB import FilteredElementCollector, View3D, NavisworksExportOptions, OpenOptions, ModelPathUtils
from pyrevit import forms, script

# Add Reference to RevitAPI
clr.AddReference("RevitAPI")
clr.AddReference("RevitServices")
import Autodesk
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


def open_document(file_path):
    app = __revit__.Application  # Get the Revit application from the current script context
    open_options = OpenOptions()
    open_options.DetachFromCentralOption = Autodesk.Revit.DB.DetachFromCentralOption.DetachAndPreserveWorksets

    model_path = ModelPathUtils.ConvertUserVisiblePathToModelPath(file_path)
    return app.OpenDocumentFile(model_path, open_options)


def get_3d_views(doc):
    return [view for view in FilteredElementCollector(doc).OfClass(View3D) if not view.IsTemplate]


def load_navisworks_export_options(xml_file):
    options = NavisworksExportOptions()
    if xml_file and System.IO.File.Exists(xml_file):
        tree = ET.parse(xml_file)
        root = tree.getroot()
    else:
        print("Invalid XML file or file does not exist.")
    return options


def export_view_to_nwc(doc, view, folder_path, export_options, file_name):
    try:
        nwc_file_path = System.IO.Path.Combine(folder_path, file_name)
        doc.Export(folder_path, file_name, export_options)
        print("Export completed successfully to: " + nwc_file_path)
    except Exception as e:
        print("Error during export: " + str(e))


# Main script execution
file_path_to_export = forms.pick_file(file_ext='rvt', title='Select a Revit file to export from')

if file_path_to_export:
    background_doc = open_document(file_path_to_export)

    views = get_3d_views(background_doc)
    selected_view = forms.SelectFromList.show([v.Name for v in views], title="Select a 3D View for NWC Export",
                                              multiselect=False)

    if selected_view:
        selected_view_obj = next((v for v in views if v.Name == selected_view), None)
        folder_path = forms.pick_folder()
        xml_file = forms.pick_file(file_ext='xml', title='Select Navisworks Export Settings File')
        navisworks_options = load_navisworks_export_options(xml_file)
        nwc_file_name = forms.ask_for_string(default="Model", prompt="Enter the name of the NWC file:",
                                             title="NWC File Name")

        if nwc_file_name:
            nwc_file_name += ".nwc"  # Ensure the file has the correct extension
            export_view_to_nwc(background_doc, selected_view_obj, folder_path, navisworks_options, nwc_file_name)
        background_doc.Close(False)  # Close the background document
    else:
        print("No 3D view was selected for export.")
        background_doc.Close(False)  # Close the background document
else:
    print("No Revit file was selected.")
